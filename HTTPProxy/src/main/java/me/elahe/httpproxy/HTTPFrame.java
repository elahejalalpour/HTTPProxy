/*
 * In The Name Of God
 * ========================================
 * [] File Name : HTTPFrame.java
 *
 * [] Creation Date : 28-08-2015
 *
 * [] Created By : Elahe Jalalpour (el.jalalpour@gmail.com)
 * =======================================
*/
/**
 * @author Elahe Jalalpour
 */
package me.elahe.httpproxy;

import javax.swing.*;
import java.awt.*;
import java.io.IOException;
import java.util.ArrayList;


public class HTTPFrame extends JFrame {


	/**
	 * Creates new form UIWindow
	 */
	Server server;
	private ArrayList<String> blocked = new ArrayList<>();

	public HTTPFrame() throws IOException {
		initComponents();

		server = new Server(jTextArea1, 4444);
		server.setBlocked(blocked);
		showRules();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	private void initComponents() {

		jScrollPane1 = new JScrollPane();
		jTextArea1 = new JTextArea();
		jButton1 = new JButton();
		jButton3 = new JButton();
		jTextField1 = new JTextField();
		jTextField2 = new JTextField();
		jLabel1 = new JLabel();
		jLabel2 = new JLabel();
		jScrollPane3 = new JScrollPane();
		jList1 = new JList();
		jMenuBar1 = new JMenuBar();
		jMenu1 = new JMenu();
		jMenuItem2 = new JMenuItem();
		jMenuItem1 = new JMenuItem();

		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

		jTextArea1.setEditable(false);
		jTextArea1.setColumns(1);
		jTextArea1.setToolTipText("Events");
		jTextArea1.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(0, 0, 0)));
		jScrollPane1.setViewportView(jTextArea1);
		jTextArea1.getAccessibleContext().setAccessibleName("t");

		jButton1.setForeground(new Color(0, 204, 204));
		jButton1.setText("Run");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jButton3.setForeground(new Color(0, 204, 204));
		jButton3.setText("add to the blocked list");
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});

		jTextField2.setText("4444");
		jTextField2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jTextField2ActionPerformed(evt);
			}
		});

		jLabel1.setText("Port :");

		jLabel2.setText("Host:");

		jList1.setModel(new AbstractListModel() {
			String[] strings = {"Item 1", "Item 2", "Item 3", "Item 4", "Item 5"};

			@Override
			public int getSize() {
				return strings.length;
			}

			@Override
			public Object getElementAt(int i) {
				return strings[i];
			}
		});
		jScrollPane3.setViewportView(jList1);

		jMenuBar1.setBackground(new java.awt.Color(204, 204, 204));

		jMenu1.setBackground(new java.awt.Color(204, 204, 204));
		jMenu1.setText("File");

		jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.META_MASK));
		jMenuItem2.setText("Run");
		jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jMenuItem2ActionPerformed(evt);
			}
		});
		jMenu1.add(jMenuItem2);

		jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.META_MASK));
		jMenuItem1.setText("Quit");
		jMenuItem1.setToolTipText("");
		jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jMenuItem1ActionPerformed(evt);
			}
		});
		jMenu1.add(jMenuItem1);

		jMenuBar1.add(jMenu1);

		setJMenuBar(jMenuBar1);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
			layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addContainerGap()
					.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
							.addComponent(jLabel2)
							.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
							.addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
							.addGap(18, 18, 18)
							.addComponent(jButton3))
						.addComponent(jScrollPane3))
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
							.addComponent(jLabel1)
							.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
							.addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
							.addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE))
						.addGroup(layout.createSequentialGroup()
							.addComponent(jScrollPane1)
							.addContainerGap())))
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addContainerGap()
					.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
						.addComponent(jScrollPane1))
					.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(jButton1)
						.addComponent(jButton3)
						.addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(jLabel1)
						.addComponent(jLabel2)))
		);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
		// Start the program
	}//GEN-LAST:event_jMenuItem2ActionPerformed

	private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
		System.exit(0);
	}//GEN-LAST:event_jMenuItem1ActionPerformed

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

		int portNumber = Integer.parseInt(jTextField2.getText().trim());
		server.startServer(portNumber);
		jTextField2.setEnabled(false);

		jButton1.setEnabled(false);
		jTextArea1.append("Server running.");
	}

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
		if (server != null) {
			String hostname = jTextField1.getText();
			if (hostname != null && hostname.trim().length() > 0) {
				boolean canWrite = true;
				for (String rulesHost : blocked) {
					if (hostname.equals(rulesHost)) {
						canWrite = false;
					}
				}
				if (canWrite) {
					blocked.add(hostname);
					jTextArea1.append(hostname + " added to blocked list.");
				} else {
					jTextArea1.append("Server stopped.");
				}
			}
		}
		showRules();
		jTextField1.setText("");
	}//GEN-LAST:event_jButton3ActionPerformed

	private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
	}//GEN-LAST:event_jTextField2ActionPerformed

	private void showRules() {
		jList1.setListData(blocked.toArray(new String[blocked.size()]));
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private JButton jButton1;
	private JButton jButton3;
	private JLabel jLabel1;
	private JLabel jLabel2;
	private JList jList1;
	private JMenu jMenu1;
	private JMenuBar jMenuBar1;
	private JMenuItem jMenuItem1;
	private JMenuItem jMenuItem2;
	private JScrollPane jScrollPane1;
	private JScrollPane jScrollPane3;
	private JTextArea jTextArea1;
	private JTextField jTextField1;
	private JTextField jTextField2;
	// End of variables declaration//GEN-END:variables

	/**
	 * @return the jTextArea1
	 */
	public javax.swing.JTextArea getjTextArea1() {
		return jTextArea1;
	}

	/**
	 * @param text
	 */
	public void setjTextArea1(String text) {
		jTextArea1.append(text);
	}

	/**
	 * @param text
	 */
	public void setRules(String text) {
		blocked.add(text);
		showRules();
	}

	/**
	 * @return the rules
	 */
	public ArrayList<String> getRules() {
		return blocked;
	}

	/**
	 * @param rules the rules to set
	 */
	public void setRules(javax.swing.JTextArea rules) {
		server.setBlocked(blocked);
	}


}
